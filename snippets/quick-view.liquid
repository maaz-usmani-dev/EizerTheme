<div class="container mx-auto px-4 py-8 max-w-7xl">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    <!-- Product Images Section -->
    <div class="relative overflow-hidden">
      <!-- Main Product Image -->
      <div class="mb-4 overflow-hidden w-[32em]">
        <div id="MainImageWrapper" class="flex w-max transition-transform duration-500">
          {% for image in product.images %}
            <img
              src="{{ image | img_url: 'large' }}"
              alt="{{ product.title }}"
              class="w-[32em] h-[32em] object-cover shrink-0"
              data-index="{{ forloop.index0 }}"
              width=""
              height=""
            >
          {% endfor %}
        </div>
      </div>

      <!-- Thumbnail Gallery -->
      {% if product.images.size > 1 %}
        <div class="flex space-x-2 overflow-x-auto pb-2 absolute bottom-6 right-32">
          {% for image in product.images %}
            <div
              class="w-16 h-16 overflow-hidden cursor-pointer"
              onclick="slideToImage({{ forloop.index0 }})"
            >
              <img
                src="{{ image | img_url: 'small' }}"
                alt="{{ product.title }} - Image {{ forloop.index }}"
                class="w-full h-full object-cover"
                data-index="{{ forloop.index0 }}"
                width=""
                height=""
              >
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    <!-- Product Details Section -->
    <div class="flex flex-col space-y-6">
      <!-- Product Title -->
      <h1 class="text-3xl font-bold text-gray-800">{{ product.title }}</h1>

      <!-- Product Price -->
      <div class="text-3xl font-bold text-lime-500" id="price-section">
        <span class="variant-price">{{ product.selected_or_first_available_variant.price | money }}</span>
        {% if product.selected_or_first_available_variant.compare_at_price
            > product.selected_or_first_available_variant.price
        %}
          <span class="text-base text-gray-600 line-through ml-2">
            {{- product.selected_or_first_available_variant.compare_at_price | money -}}
          </span>
        {% endif %}
      </div>

      <!-- Product Meta Information -->
      <div class="space-y-2 text-sm">
        <div class="flex">
          <span class="w-24 text-gray-600">Category</span>
          <span class="text-gray-800"
            >:
            {% for collection in product.collections %}
              <a href="{{ collection.url }}" class="text-lime-600 hover:underline">{{ collection.title }}</a>
              {%- unless forloop.last -%}
                ,
              {% endunless %}
            {% endfor %}
          </span>
        </div>

        <div class="flex">
          <span class="w-24 text-gray-600">Availability</span>
          <span class="text-gray-800" id="variant-availability">
            :
            {% if product.available %}
              <span class="text-lime-500">In Stock</span>
            {% else %}
              <span class="text-red-600">Out of Stock</span>
            {% endif %}
          </span>
        </div>
      </div>

      <!-- Product Description -->
      <div class="text-gray-700 leading-relaxed">
        {{ product.description | truncatewords: 35 }}
      </div>

      <!-- Product Form -->
      {% form 'product', product, id: 'product-form' %}
        <!-- Variant Selection if product has multiple variants -->
        {% assign variant = product.selected_or_first_available_variant %}
        <input
          type="hidden"
          name="id"
          value="{{variant.id}}"
        >
        {% if product.has_only_default_variant == false %}
          <variant-selector data-url="{{product.url}}" data-section="product-section">
            {% for option in product.options_with_values %}
              <div class="mt-4">
                <label for="Option-{{forloop.index0}}" class="block text-sm font-medium text-gray-700">
                  {{- option.name -}}
                </label>
                <select
                  id="Option-{{forloop.index0}}"
                  name="options[{{ option.name }}]"
                  class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-lime-500 focus:border-lime-500 sm:text-sm rounded-md"
                >
                  {% for value in option.values %}
                    <option
                      value="{{ value }}"
                      {% if option.selected_value == value %}
                        selected="selected"
                      {% endif %}
                    >
                      {{ value }}
                    </option>
                  {% endfor %}
                </select>
              </div>
            {% endfor %}
            <script type="application/json">
              {{ product.variants| json }}
            </script>
          </variant-selector>
        {% endif %}

        <!-- Quantity Selector -->
        <div class="mt-6 flex items-center">
          <label for="Quantity" class="mr-4 text-gray-700">Quantity:</label>
          <div class="flex items-center border rounded-md">
            <button
              type="button"
              class="px-3 py-1 text-gray-600 hover:bg-gray-100"
              onclick="decrementQuantity()"
            >
              -
            </button>
            <input
              type="number"
              id="Quantity"
              name="quantity"
              value="1"
              min="1"
              class="w-12 text-center border-0 focus:ring-0 focus:outline-none"
            >
            <button
              type="button"
              class="px-3 py-1 text-gray-600 hover:bg-gray-100"
              onclick="incrementQuantity()"
            >
              +
            </button>
          </div>
        </div>

        <!-- Add to Cart Button and Action Buttons -->
        <div class="mt-6 flex space-x-2">
          <button
            type="submit"
            name="add"
            id="AddToCart"
            class="flex-1 bg-lime-500 border border-transparent hover:bg-transparent hover:text-lime-500 hover:border-lime-500 text-white font-medium py-3 px-6 rounded-md uppercase tracking-wide"
            {% unless product.available %}
              disabled
            {% endunless %}
          >
            {% if product.available %}
              Add to Cart
            {% else %}
              Sold Out
            {% endif %}
          </button>
          <!-- Compare Button -->
          <button type="button" class="p-3 border rounded-md hover:bg-lime-500 hover:text-white">
            <i class="fa-regular fa-gem text-inherit"></i>
          </button>
          <!-- Wishlist Button -->
          <button
            type="button"
            class="p-3 border border-black rounded-md hover:bg-lime-500 text-gray-700 hover:text-white"
            id="wishlist"
            data-var="{{product.handle}}"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 text-inherit"
              fill="currentColor"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
            </svg>
          </button>
        </div>
      {% endform %}
    </div>
  </div>
</div>
<script>
  const variantImage = {
    {% for variant in product.variants %}
      {% if variant.featured_image %}
        "{{ variant.id }}": "{{ variant.featured_image.src | img_url: 'master' }}",
      {% endif %}
    {% endfor %}
  };

  const productImg = [
    {% for image in product.images %}
      "{{ image.src | img_url: 'master' }}",
    {% endfor %}
  ];
</script>

<script>
  function incrementQuantity() {
    const input_val = document.getElementById('Quantity');
    input_val.value = parseInt(input_val.value) + 1;
  }

  function decrementQuantity() {
    const input_val = document.getElementById('Quantity');
    if (parseInt(input_val.value) > 1) {
      input.value = parseInt(input_val.value) - 1;
    }
  }

  function slideToImage(index) {
    const Imgwrapper = document.getElementById('MainImageWrapper');
    const mainImgSize = 32; // your main image width/height in em
    const fontSize = parseFloat(getComputedStyle(document.documentElement).fontSize); // 1em in px
    const imgWidthPx = mainImgSize * fontSize; // final width in px

    const offset = index * imgWidthPx;
    Imgwrapper.style.transform = `translateX(-${offset}px)`;
  }

  class Variant extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('change', this.onVariantChange);
    }

    onVariantChange() {
      this.getOptions();
      this.getVariant();
      if (this.current) {
        this.getURL();
        this.getID();
        this.updateVariantInfo();
      }
    }

    getOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
    }

    getVariantData() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getVariant() {
      this.current = this.getVariantData().find((variant) => {
        return !variant.options.map((option, index) => this.options[index] !== option).includes(true);
      });
    }

    getURL() {
      if (!this.current) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.current.id}`);
    }

    getID() {
      const input = document.querySelector('#product-form').querySelector('input[name="id"]');
      input.value = this.current.id;
    }

    updateVariantInfo() {
      if (!this.current) return;

      // ✅ Update Price with Rs. instead of PKR
      const elementPrice = document.getElementById('price-section');
      if (elementPrice) {
        const formatPrice = `Rs. ${(this.current.price / 100).toLocaleString()}`;
        let priceHTM = `<span class="variant-price">${formatPrice}</span>`;

        if (this.current.compare_at_price && this.current.compare_at_price > this.current.price) {
          const formattedCompareAtPrice = `Rs. ${(this.current.compare_at_price / 100).toLocaleString()}`;
          priceHTM += `<span class="text-base text-gray-600 line-through ml-2">${formattedCompareAtPrice}</span>`;
        }

        elementPrice.innerHTML = priceHTM;
      }

      // Update Availability
      const availableElement = document.getElementById('variant-availability');
      if (availableElement) {
        availableElement.innerHTML = `: <span class="${this.current.available ? 'text-lime-600' : 'text-red-600'}">
          ${this.current.available ? 'In Stock' : 'Out of Stock'}
        </span>`;
      }

      // Update Add to Cart button
      const addToCart = document.getElementById('AddToCart');
      if (addToCart) {
        if (this.current.available) {
          addToCart.disabled = false;
          addToCart.textContent = 'Add to Cart';
        } else {
          addToCart.disabled = true;
          addToCart.textContent = 'Sold Out';
        }
      }

      // ✅ Slide to correct image
      if (variantImage[this.current.id]) {
        const variantSrc = variantImage[this.current.id];
        const matchIndex = productImg.findIndex((img) => img === variantSrc);
        if (matchIndex !== -1) {
          slideToImage(matchIndex);
        }
      }
    }
  }
  customElements.define('variant-selector', Variant);
</script>
